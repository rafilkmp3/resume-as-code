---
# AI-Friendly pre-commit hooks for resume-as-code
# Optimized for Claude Code development workflow

repos:
  # ESSENTIAL: Conventional Commits validation (AI-Assistant Friendly)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.2.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]
        verbose: true
        # Skip when using SKIP environment variable for emergency commits
        exclude: ^$
        
  # AI-FRIENDLY: Enhanced commit validation with helpful error messages
  - repo: local
    hooks:
      - id: claude-friendly-commitlint
        name: ðŸ¤– Claude Code - Conventional Commits Helper
        entry: scripts/commitlint-local.sh
        language: script
        stages: [commit-msg]
        pass_filenames: true
        always_run: false
        # This provides detailed AI-friendly error messages matching CI exactly

  # Essential JSON validation (prevents broken builds)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-json
      - id: check-yaml
      - id: check-merge-conflict

  # Resume data validation (CRITICAL: Project-specific)
  - repo: local
    hooks:
      - id: resume-data-validation
        name: Resume JSON Schema validation
        entry: bash
        args:
          - '-c'
          - 'npx ajv-cli validate -s config/resume-schema.json -d src/resume-data.json && echo "âœ… resume-data passes validation"'
        language: system
        files: src/resume-data\.json$
        pass_filenames: false

  # npm audit (security without being annoying)
  - repo: local
    hooks:
      - id: npm-audit
        name: npm audit
        entry: npm audit --audit-level=high
        language: system
        files: package.*\.json$
        pass_filenames: false
