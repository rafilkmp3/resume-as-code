# Multi-stage Dockerfile for browser-specific testing environments
FROM node:22-slim AS base

# Common environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    NODE_ENV=test \
    PLAYWRIGHT_BROWSERS_PATH=/opt/playwright

# Install common dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y --no-install-recommends         fonts-liberation         libatk-bridge2.0-0         libdrm2         libxcomposite1         libxdamage1         libxrandr2         libgbm1         libxss1         libasound2         libgtk-3-0         libgbm-dev         libnss3         libgconf-2-4         libxtst6         libpangocairo-1.0-0         libatk1.0-0         libcairo-gobject2         libgdk-pixbuf2.0-0         make         git         wget         curl     && rm -rf /var/lib/apt/lists/*     && apt-get clean     && mkdir -p /opt/playwright

WORKDIR /app

# Copy package files and install npm dependencies
COPY package*.json Makefile ./
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Create hello world test directory and embedded test
RUN mkdir -p /app/tests/hello-world

# Create the embedded hello world test file
RUN cat > /app/tests/hello-world/hello-world.spec.js << 'EOF'
const { test, expect } = require('@playwright/test');

test.describe('Hello World Browser Test', () => {
  test('should load a simple page and verify browser functionality', async ({ page, browserName }) => {
    console.log(`ðŸ§ª Running Hello World test for ${browserName}`);
    
    // Create a simple HTML page
    await page.setContent(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>Hello World Test - ${browserName}</title>
        </head>
        <body>
          <h1 id="greeting">Hello World from ${browserName}!</h1>
          <p id="status">Browser is working correctly</p>
          <button id="test-btn">Click me</button>
          <script>
            document.getElementById('test-btn').onclick = function() {
              document.getElementById('status').textContent = 'Button clicked successfully!';
            };
          </script>
        </body>
      </html>
    `);

    // Verify page loaded
    await expect(page.locator('#greeting')).toHaveText(`Hello World from ${browserName}!`);
    
    // Test basic interactivity
    await page.click('#test-btn');
    await expect(page.locator('#status')).toHaveText('Button clicked successfully!');
    
    console.log(`âœ… Hello World test passed for ${browserName}`);
  });
});
EOF

# Create test user and set permissions
RUN groupadd -g 1001 testuser && \
    useradd -u 1001 -g testuser -m testuser && \
    chown -R testuser:testuser /app && \
    chown -R testuser:testuser /home/testuser

# ===== CHROMIUM STAGE =====
FROM base AS chromium

# Install Chromium browser and additional dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && apt-get install -y --no-install-recommends \
        chromium \
    && rm -rf /var/lib/apt/lists/*

# Set Chromium-specific environment
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

# Install Playwright Chromium browser
RUN npx playwright install chromium && \
    npx playwright install-deps chromium

# Set permissions for browser directories
RUN chmod -R 755 /opt/playwright || true &&     chown -R testuser:testuser /opt/playwright || true

USER testuser

# Default command runs the embedded hello world test
CMD ["npx", "playwright", "test", "tests/hello-world/hello-world.spec.js"]

# ===== FIREFOX STAGE =====
FROM base AS firefox

# Install Firefox browser and additional dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y --no-install-recommends         firefox-esr         libdbus-glib-1-2     && rm -rf /var/lib/apt/lists/*

# Install Playwright Firefox browser
RUN npx playwright install firefox && \
    npx playwright install-deps firefox

# Set permissions for browser directories
RUN chmod -R 755 /opt/playwright || true &&     chown -R testuser:testuser /opt/playwright || true

USER testuser

# Default command runs the embedded hello world test
CMD ["npx", "playwright", "test", "tests/hello-world/hello-world.spec.js"]

# ===== WEBKIT STAGE =====
FROM base AS webkit

# Install WebKit-specific dependencies (no system browser needed)
RUN DEBIAN_FRONTEND=noninteractive apt-get update     && apt-get install -y --no-install-recommends         libopus0         libwebp7         libenchant-2-2         libgudev-1.0-0         libsecret-1-0         libhyphen0         libegl1         libnotify4         libxslt1.1         libevent-2.1-7         libgles2-mesa     && rm -rf /var/lib/apt/lists/*

# Install Playwright WebKit browser
RUN npx playwright install webkit && \
    npx playwright install-deps webkit

# Set permissions for browser directories
RUN chmod -R 755 /opt/playwright || true &&     chown -R testuser:testuser /opt/playwright || true

USER testuser

# Default command runs the embedded hello world test
CMD ["npx", "playwright", "test", "tests/hello-world/hello-world.spec.js"]