services:
  # Development service
  dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: development
    ports:
      - '3000:3000'
      - '3001:3001'
    volumes:
      - ..:/app
      - /app/node_modules
      - /app/dist
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    profiles:
      - dev

  # Production service
  production:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - prod

  # CI/Testing service
  ci:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: ci
    environment:
      - CI=true
      - NODE_ENV=test
    volumes:
      - ..:/app
      - /app/node_modules
      - test-results:/app/test-results
      - coverage:/app/coverage
    profiles:
      - ci
      - test

  # Build service (for CI/CD pipeline)
  builder:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: builder
    volumes:
      - build-output:/app/dist
    environment:
      - NODE_ENV=production
    profiles:
      - build

volumes:
  test-results:
  coverage:
  build-output:
