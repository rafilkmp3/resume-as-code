# 🤖 Enterprise-Grade Dependabot Configuration - Rio de Janeiro Optimized
# Advanced dependency automation with intelligent grouping and BRT timezone scheduling
# Matches dependency management standards from Netflix, Meta, and Google frontend teams

version: 2

updates:
  # 📦 NPM Production Dependencies - Critical Path
  - package-ecosystem: 'npm'
    directory: '/'
    schedule:
      interval: 'weekly'
      day: 'tuesday'        # Tuesday morning for optimal review time
      time: '08:30'         # 8:30 AM BRT (11:30 UTC-3) - before daily standup
      timezone: 'America/Sao_Paulo'
    open-pull-requests-limit: 2
    rebase-strategy: 'auto'
    commit-message:
      prefix: 'chore(deps)'
      prefix-development: 'chore(deps)'
      # Don't include scope - prevents double-scoping with group names
    reviewers:
      - 'rafilkmp3'
    assignees:
      - 'rafilkmp3'
    labels:
      - 'dependencies'
      - 'automated'
      - 'needs-review'
    # 🎯 Intelligent Enterprise Grouping Strategy (SHORT NAMES for commit message compliance)
    groups:
      # 🔥 Critical Production Stack - Grouped patches for efficiency
      core:
        patterns:
          - 'handlebars'
          - 'puppeteer'
          - 'express'
          - 'sharp'
          - 'qrcode'
        update-types:
          - 'patch'

      # 🧪 Testing & Quality Assurance Stack
      test:
        patterns:
          - 'jest*'
          - 'playwright*'
          - '@jest/*'
          - '@playwright/*'
          - 'jsdom'
        update-types:
          - 'patch'
          - 'minor'

      # 🚀 Astro Framework Stack - Critical Frontend Framework
      astro:
        patterns:
          - 'astro'
          - '@astrojs/*'
          - 'astro-*'
        update-types:
          - 'patch'
          - 'minor'

      # 🔧 Build & Development Tools
      build:
        patterns:
          - 'chokidar'
          - 'livereload'
          - 'nodemon'
          - '@babel/*'
          - 'babel-*'
        update-types:
          - 'patch'
          - 'minor'

      # 📝 TypeScript & Linting Ecosystem - All Updates Grouped
      lint:
        patterns:
          - '@types/*'
          - '*-types'
          - 'eslint*'
          - '@eslint/*'
          - 'prettier*'
          - 'typescript'
        update-types:
          - 'patch'
          - 'minor'

      # 🎯 All Other Dependencies - Aggressive Grouping for Noise Reduction
      deps:
        patterns:
          - '*'
        update-types:
          - 'patch'
    # 🚫 Strategic Security & Stability Filters
    ignore:
      # 🔒 Major versions require manual security review
      - dependency-name: '*'
        update-types: ['version-update:semver-major']
      # 🎯 Reduce noise from frequent but non-critical patches
      - dependency-name: '@types/*'
        update-types: ['version-update:semver-patch']
      - dependency-name: 'typescript'
        update-types: ['version-update:semver-patch']
      # 🎭 Browser automation stability (Playwright can be flaky)
      - dependency-name: 'playwright'
        update-types: ['version-update:semver-major']
      - dependency-name: 'puppeteer'
        update-types: ['version-update:semver-major'] 
      # 📄 Template engine stability (breaking changes affect builds)
      - dependency-name: 'handlebars'
        update-types: ['version-update:semver-major']
      # 🚀 Astro framework stability (major versions can break builds)
      - dependency-name: 'astro'
        update-types: ['version-update:semver-major']
      - dependency-name: '@astrojs/*'
        update-types: ['version-update:semver-major']

  # 🐳 Docker Images - Monthly BRT Schedule
  - package-ecosystem: 'docker'
    directory: '/'
    schedule:
      interval: 'monthly'
      day: 'wednesday'     # Mid-week for better review time
      time: '10:00'        # 10 AM BRT (13:00 UTC-3) - after morning meetings
      timezone: 'America/Sao_Paulo'
    open-pull-requests-limit: 2
    rebase-strategy: 'auto'
    commit-message:
      prefix: 'chore(deps-docker):'
      include: 'scope'
    reviewers:
      - 'rafilkmp3'
    labels:
      - 'dependencies'
      - 'docker'
      - 'automated'
      - 'infrastructure'
    groups:
      docker-base-images:
        patterns:
          - 'node*'
          - 'alpine*'
          - 'ubuntu*'
        update-types:
          - 'patch'
          - 'minor'
      playwright-browsers:
        patterns:
          - 'mcr.microsoft.com/playwright*'
        update-types:
          - 'patch'

  # ⚙️ GitHub Actions - Enhanced BRT Scheduling
  - package-ecosystem: 'github-actions'
    directory: '/'
    schedule:
      interval: 'weekly'    # More frequent for security updates
      day: 'friday'         # Friday afternoon for weekend review
      time: '14:00'         # 2 PM BRT (17:00 UTC-3) - end of work day
      timezone: 'America/Sao_Paulo'
    open-pull-requests-limit: 3
    rebase-strategy: 'auto'
    commit-message:
      prefix: 'ci:'
      include: 'scope'
    reviewers:
      - 'rafilkmp3'
    labels:
      - 'github-actions'
      - 'ci-cd'
      - 'automated'
      - 'security'
    # 🎯 Intelligent Action Grouping (SHORT NAMES for commit message compliance)
    groups:
      # 🔧 Core Actions (setup, cache, upload/download, checkout)
      setup:
        patterns:
          - 'actions/setup-*'
          - 'actions/cache*'
          - 'actions/upload-*'
          - 'actions/download-*'
          - 'actions/checkout*'
          - 'actions/configure-pages*'
          - 'actions/deploy-pages*'
          - 'actions/github-script*'
        update-types:
          - 'patch'
          - 'minor'
      # 🛡️ Security & Code Quality
      security:
        patterns:
          - 'github/codeql-action*'
          - 'google/osv-scanner-action*'
          - 'trufflesecurity/trufflehog*'
          - 'aquasecurity/trivy-action*'
          - 'actions/stale*'
        update-types:
          - 'patch'
          - 'minor'
      # 🚀 Deployment & Release Management
      deploy:
        patterns:
          - 'peaceiris/actions-gh-pages*'
          - 'treosh/lighthouse-ci-action*'
          - 'netlify/actions*'
          - 'South-Paw/action-netlify-cli*'
          - 'googleapis/release-please-action*'
          - 'actions/create-github-app-token*'
        update-types:
          - 'patch'
          - 'minor'
      # 🐳 Docker & Container Actions
      docker:
        patterns:
          - 'docker/setup-buildx-action*'
          - 'docker/login-action*'
          - 'docker/build-push-action*'
          - 'browser-actions/setup-chrome*'
        update-types:
          - 'patch'
          - 'minor'
      # 💬 PR & Comment Management
      pr:
        patterns:
          - 'peter-evans/create-or-update-comment*'
          - 'actions/github-script*'
        update-types:
          - 'patch'
          - 'minor'
    # 🚫 Conservative major version policy
    ignore:
      - dependency-name: '*'
        update-types: ['version-update:semver-major']


# 🌟 ENTERPRISE AUTOMATION SUMMARY
# 
# 📅 Rio de Janeiro Optimized Schedule:
# - 🖥️  Tuesday   08:30 BRT: NPM dependencies (pre-standup review)
# - 🐳  Wednesday 10:00 BRT: Docker images (mid-week stability)  
# - ⚙️  Friday    14:00 BRT: GitHub Actions (end-of-week review)
#
# 🎯 Advanced Features:
# - Netflix/Meta-style dependency grouping by function
# - Automated reviewer assignment and labeling
# - Security-first major version blocking
# - Intelligent ecosystem-aware batching
# - BRT timezone optimization for Brazilian developers
#
# 🤖 Automation Philosophy:
# - Non-blocking: All updates continue-on-error for deployment
# - Intelligent: Smart grouping reduces review overhead
# - Secure: Major versions require manual security review
# - Efficient: Timezone-optimized for maximum developer productivity
