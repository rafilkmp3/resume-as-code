---
name: 🚀 Local Development Workflow (Act Compatible)

on:
  workflow_dispatch:
    inputs:
      force_local:
        description: 'Force local environment (bypass Docker)'
        required: false
        type: boolean
        default: false
  push:
    branches-ignore:
      - main  # Avoid conflicts with production workflows

env:
  # Detect if running in act (local) or GitHub Actions (CI)
  RUN_LOCAL: ${{ github.event.inputs.force_local || 'false' }}
  NODE_ENV: development

jobs:
  environment-detection:
    name: 🔍 Environment Detection
    runs-on: ubuntu-latest
    outputs:
      run_local: ${{ steps.detect.outputs.run_local }}
      environment: ${{ steps.detect.outputs.environment }}
    steps:
      - name: Detect execution environment
        id: detect
        run: |
          echo "🔍 Detecting execution environment..."
          
          # Check if running in act (local)
          if [ "$ACT" = "true" ] || [ "${{ github.event.inputs.force_local }}" = "true" ]; then
            echo "🏠 Running in LOCAL environment (act)"
            echo "run_local=true" >> $GITHUB_OUTPUT
            echo "environment=local" >> $GITHUB_OUTPUT
          else
            echo "☁️  Running in CI environment (GitHub Actions)"
            echo "run_local=false" >> $GITHUB_OUTPUT
            echo "environment=ci" >> $GITHUB_OUTPUT
          fi
          
          echo "📊 Environment variables:"
          echo "  - ACT: $ACT"
          echo "  - RUN_LOCAL: ${{ env.RUN_LOCAL }}"
          echo "  - NODE_ENV: ${{ env.NODE_ENV }}"
          echo "  - Runner OS: ${{ runner.os }}"

  local-development:
    name: 🏠 Local Development Build
    runs-on: ubuntu-latest
    needs: environment-detection
    if: needs.environment-detection.outputs.run_local == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js (Local Mode)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies (Local Mode)
        run: |
          echo "📦 Installing dependencies in local mode..."
          echo "⚡ No Docker required - using host Node.js environment"
          npm ci

      - name: Build project (Local Mode)
        env:
          RUN_LOCAL: true
          NODE_ENV: development
        run: |
          echo "🏗️ Building project in local mode..."
          echo "⚡ No Docker containers - direct Node.js execution"
          npm run build

      - name: Run tests (Local Mode) 
        env:
          RUN_LOCAL: true
        run: |
          echo "🧪 Running tests in local mode..."
          echo "⚡ Fast execution - no container overhead"
          npm test

      - name: Local development summary
        run: |
          echo "# 🏠 Local Development Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Local (act)" >> $GITHUB_STEP_SUMMARY
          echo "**Node.js Version:** $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "**npm Version:** $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "**Build Mode:** Development (RUN_LOCAL=true)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ⚡ Performance Benefits" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ No Docker container overhead" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Direct host Node.js execution" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Faster iteration cycles" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Reproducible GitHub Actions locally" >> $GITHUB_STEP_SUMMARY

  ci-development:
    name: ☁️ CI Development Build
    runs-on: ubuntu-latest
    needs: environment-detection
    if: needs.environment-detection.outputs.run_local == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build with Docker (CI Mode)
        run: |
          echo "🐳 Building with Docker in CI mode..."
          echo "☁️  Using containerized environment"
          make build

      - name: Test with Docker (CI Mode)
        run: |
          echo "🧪 Running tests with Docker in CI mode..."
          echo "☁️  Full containerized testing"
          make test-fast

      - name: CI development summary
        run: |
          echo "# ☁️ CI Development Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** CI (GitHub Actions)" >> $GITHUB_STEP_SUMMARY
          echo "**Docker Version:** $(docker --version)" >> $GITHUB_STEP_SUMMARY
          echo "**Build Mode:** Docker Compose" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🐳 Docker Benefits" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Environment parity (ARM64 vs AMD64)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Isolated dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Consistent cross-platform behavior" >> $GITHUB_STEP_SUMMARY

  development-comparison:
    name: 📊 Development Comparison
    runs-on: ubuntu-latest
    needs: [environment-detection, local-development, ci-development]
    if: always()
    steps:
      - name: Environment comparison summary
        run: |
          echo "# 📊 Development Environment Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🏠 Local Development (act)" >> $GITHUB_STEP_SUMMARY
          echo "- **Performance:** ⚡ Fastest (no container overhead)" >> $GITHUB_STEP_SUMMARY
          echo "- **Setup:** 🚀 Minimal (uses host Node.js)" >> $GITHUB_STEP_SUMMARY
          echo "- **Use Case:** 💻 Development iteration, testing act workflows" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ☁️ CI Development (GitHub Actions)" >> $GITHUB_STEP_SUMMARY
          echo "- **Performance:** 🐳 Standard (container overhead)" >> $GITHUB_STEP_SUMMARY
          echo "- **Setup:** 🔧 Complete (Docker + dependencies)" >> $GITHUB_STEP_SUMMARY
          echo "- **Use Case:** 🌐 CI/CD, cross-platform validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Recommendation:** Use local for rapid development, CI for validation"