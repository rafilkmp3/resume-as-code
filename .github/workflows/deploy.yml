name: Build and Deploy Resume to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Parallel test execution across multiple runners
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-group: [quick, visual, accessibility]
      fail-fast: false  # Continue other tests even if one fails
    steps:
      - name: Skip Duplicate Actions
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'always'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/*.md", "CHANGELOG.md", "LICENSE"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'
          cancel_others: 'true'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS for image assets

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          # Install only browsers needed for this test group
          if [ "${{ matrix.test-group }}" = "quick" ]; then
            npx playwright install chromium
          else
            npx playwright install
          fi

      - name: Auto-fix mobile layout issues
        run: node scripts/auto-fix-layout.js

      - name: Build resume for testing
        run: npm run build

      - name: Run parallel tests with maximum CPU utilization
        if: "!contains(github.event.head_commit.message, 'skip-tests')"
        run: |
          GITHUB_RUNNER_CORES=$(nproc)
          echo "üöÄ Using $GITHUB_RUNNER_CORES CPU cores for parallel testing"
          echo "üìä Test group: ${{ matrix.test-group }}"
          
          case "${{ matrix.test-group }}" in
            "quick")
              echo "üèÉ Running quick mobile tests..."
              CI=true npx playwright test tests/e2e/issue-detection.spec.js \
                --workers=$GITHUB_RUNNER_CORES \
                --reporter=dot \
                --project=chromium
              ;;
            "visual")
              echo "üì∏ Running visual regression tests..."
              CI=true npx playwright test tests/visual/ \
                --workers=$((GITHUB_RUNNER_CORES / 2)) \
                --reporter=dot
              ;;
            "accessibility")
              echo "‚ôø Running accessibility tests..."
              CI=true npx playwright test tests/accessibility/ \
                --workers=$GITHUB_RUNNER_CORES \
                --reporter=dot
              ;;
          esac
        continue-on-error: true

  # Separate build job for deployment
  build:
    runs-on: ubuntu-latest
    needs: test  # Wait for all tests to complete
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true  # Enable Git LFS for image assets

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix mobile layout issues
        run: node scripts/auto-fix-layout.js

      - name: Build resume
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4