---
name: 🔒 Security Scanning

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - 'package*.json'
      - '.github/workflows/**'
      - 'docker/**'
      - 'Dockerfile*'
      - 'scripts/**'
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      run_full_security_suite:
        description: 'Run full security scanning suite'
        required: false
        default: 'false'
        type: boolean

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

permissions:
  security-events: write
  contents: read
  pull-requests: write

jobs:
  dependency-security:
    name: 🔍 Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Audit dependencies
        run: npm audit --audit-level=moderate

  osv-scanner:
    name: 🔎 OSV Security Scanner
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.2.1
    with:
      scan-args: |-
        -r
        --skip-git
        ./
    permissions:
      actions: read
      contents: read
      security-events: write

  secret-scan:
    name: 🔐 Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure TruffleHog scan parameters
        id: trufflehog-config
        run: |
          echo "🔍 Configuring TruffleHog scan parameters for context: ${{ github.event_name }}"
          
          # Configure scan mode based on trigger context
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # PR mode: Scan only changes in the PR
            echo "scan-mode=differential" >> $GITHUB_OUTPUT
            echo "base-ref=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head-ref=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
            echo "📊 PR Mode: Scanning changes from ${{ github.event.pull_request.base.sha }} to ${{ github.event.pull_request.head.sha }}"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "main" ]]; then
            # Main branch push: Scan last commit only (to avoid BASE=HEAD issue)
            echo "scan-mode=commit" >> $GITHUB_OUTPUT
            echo "head-ref=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "📊 Main Branch Push: Scanning single commit ${{ github.sha }}"
          else
            # All other cases: Full repository scan
            echo "scan-mode=full" >> $GITHUB_OUTPUT
            echo "📊 Full Repository Scan: Scanning entire repository"
          fi

      - name: TruffleHog OSS Secret Scanner (Differential)
        if: steps.trufflehog-config.outputs.scan-mode == 'differential'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ steps.trufflehog-config.outputs.base-ref }}
          head: ${{ steps.trufflehog-config.outputs.head-ref }}
          extra_args: --debug --only-verified

      - name: TruffleHog OSS Secret Scanner (Single Commit)
        if: steps.trufflehog-config.outputs.scan-mode == 'commit'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.sha }}~1
          head: ${{ github.sha }}
          extra_args: --debug --only-verified

      - name: TruffleHog OSS Secret Scanner (Full Repository)
        if: steps.trufflehog-config.outputs.scan-mode == 'full'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --debug --only-verified

  container-security:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' && (github.event.inputs.run_full_security_suite == 'true' || contains(github.event.head_commit.message, 'docker') || contains(github.event.head_commit.message, 'container'))
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile -t resume-security-scan:${{ github.sha }} .

      - name: Trivy Container Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'resume-security-scan:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  infrastructure-scan:
    name: 🏗️ Infrastructure Security Scan
    runs-on: ubuntu-latest
    if: github.event.inputs.run_full_security_suite == 'true' || github.event_name == 'schedule' || contains(github.event.head_commit.message, 'infrastructure') || contains(github.event.head_commit.message, 'github-actions')
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Checkov - Infrastructure Security
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          soft_fail: true
          framework: dockerfile,github_actions
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-security, osv-scanner, secret-scan, container-security, infrastructure-scan]
    if: always()
    steps:
      - name: Security Summary
        run: |
          echo "## 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Dependencies | ${{ needs.dependency-security.result == 'success' && '✅ Passed' || '❌ Failed' }} | NPM audit |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔎 OSV Scanner | ${{ needs.osv-scanner.result == 'success' && '✅ Passed' || '❌ Failed' }} | Google OSV vulnerability database |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔐 Secrets | ${{ needs.secret-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} | TruffleHog Scanner |" >> $GITHUB_STEP_SUMMARY
          echo "| 🐳 Container | ${{ needs.container-security.result == 'success' && '✅ Passed' || '❌ Failed' }} | Trivy Security Scanner |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Infrastructure | ${{ needs.infrastructure-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} | Checkov Policy Scanner |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 **Next Steps**: Review any failed scans and address security issues before deployment." >> $GITHUB_STEP_SUMMARY
