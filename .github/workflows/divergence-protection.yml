---
name: Divergence Protection

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

permissions:
  contents: read
  pull-requests: read

jobs:
  # 🔍 Divergence Protection: Validate PR is up-to-date with main
  divergence-precheck:
    name: 🔍 Divergence Pre-Check
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 5
    steps:
      - name: 🔍 Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: 🔍 Check PR Divergence Status
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "🔍 Checking if PR is diverged from main..."
          
          # Get PR info
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_BASE_SHA=$(gh pr view "$PR_NUMBER" --json baseRefOid --jq '.baseRefOid')
          CURRENT_MAIN_SHA=$(git rev-parse main)
          
          echo "PR Base SHA: $PR_BASE_SHA"
          echo "Main SHA: $CURRENT_MAIN_SHA"
          
          if [ "$PR_BASE_SHA" = "$CURRENT_MAIN_SHA" ]; then
            echo "✅ PR is up-to-date with main branch"
            echo "status=current" >> $GITHUB_OUTPUT
          else
            # Check how many commits behind
            COMMITS_BEHIND=$(git rev-list --count "$PR_BASE_SHA..main" 2>/dev/null || echo "0")
            echo "⚠️  PR is $COMMITS_BEHIND commits behind main"
            
            if [ "$COMMITS_BEHIND" -gt 10 ]; then
              echo "❌ PR is significantly diverged ($COMMITS_BEHIND commits behind)"
              echo "Please rebase or update your PR to resolve conflicts"
              exit 1
            else
              echo "✅ PR divergence is within acceptable range ($COMMITS_BEHIND commits)"
              echo "status=acceptable_divergence" >> $GITHUB_OUTPUT
            fi
          fi
          
          echo "🔍 Divergence check completed successfully"