---
name: 🧪 Test Build Environments - Preview/Staging/Production

on:
  workflow_dispatch:
    inputs:
      environment_filter:
        description: 'Environment to test (all, preview, staging, production)'
        required: false
        type: choice
        options: ['all', 'preview', 'staging', 'production']
        default: 'all'
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package*.json'
      - '.github/workflows/_build.yml'
      - '.github/actions/**'
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package*.json'
      - '.github/workflows/_build.yml'
      - '.github/actions/**'

concurrency:
  group: test-environments-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  preview-build:
    name: 🏗️ Preview Build Test
    if: |
      github.event_name != 'workflow_dispatch' || 
      inputs.environment_filter == 'all' || 
      inputs.environment_filter == 'preview'
    uses: ./.github/workflows/_build.yml
    with:
      runner_type: ubuntu-24.04-arm
      node_version: '22'
      build_mode: draft
      environment_name: preview
      context: preview
      upload_artifacts: true
      artifact_name: build-test-preview
      timeout_minutes: 12

  staging-build:
    name: 🏗️ Staging Build Test  
    if: |
      github.event_name != 'workflow_dispatch' || 
      inputs.environment_filter == 'all' || 
      inputs.environment_filter == 'staging'
    uses: ./.github/workflows/_build.yml
    with:
      runner_type: ubuntu-24.04-arm
      node_version: '22'
      build_mode: production
      environment_name: staging
      context: staging
      upload_artifacts: true
      artifact_name: build-test-staging
      timeout_minutes: 12

  production-build:
    name: 🏗️ Production Build Test
    if: |
      github.event_name != 'workflow_dispatch' || 
      inputs.environment_filter == 'all' || 
      inputs.environment_filter == 'production'
    uses: ./.github/workflows/_build.yml
    with:
      runner_type: ubuntu-latest
      node_version: '22'
      build_mode: production
      environment_name: production
      context: deploy
      upload_artifacts: true
      artifact_name: build-test-production
      timeout_minutes: 12

  production-guard:
    name: 🛡️ Production Deployment Guard
    runs-on: ubuntu-latest
    needs: [preview-build, staging-build, production-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 5
    
    steps:
      - name: 🚨 Production Build Ready
        run: |
          echo "## 🚨 PRODUCTION BUILD READY" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **All environment tests passed**" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Production build artifacts available**" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Manual deployment required**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Download production build artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Deploy to GitHub Pages (automated via other workflows)" >> $GITHUB_STEP_SUMMARY
          echo "- Verify production deployment" >> $GITHUB_STEP_SUMMARY

  test-summary:
    name: 📋 Environment Test Summary  
    needs: [preview-build, staging-build, production-build]
    runs-on: ubuntu-latest
    if: always()
    timeout-minutes: 5
    
    steps:
      - name: 📊 Generate Test Summary
        run: |
          echo "# 🧪 Environment Build Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📋 Test Results Status" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | Status | Runner | Chrome | Build Mode |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|---------|---------|---------|------------|" >> $GITHUB_STEP_SUMMARY
          
          # Individual job status
          PREVIEW_STATUS="${{ needs.preview-build.result == 'success' && '✅ Pass' || '❌ Fail' }}"
          STAGING_STATUS="${{ needs.staging-build.result == 'success' && '✅ Pass' || '❌ Fail' }}"
          PRODUCTION_STATUS="${{ needs.production-build.result == 'success' && '✅ Pass' || '❌ Fail' }}"
          
          echo "| 📱 Preview | $PREVIEW_STATUS | ubuntu-24.04-arm | ARM64 Native | draft |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔄 Staging | $STAGING_STATUS | ubuntu-24.04-arm | ARM64 Native | production |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚀 Production | $PRODUCTION_STATUS | ubuntu-latest | Google Chrome | production |" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🎯 Key Validations" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ ARM64 Chrome Setup**: Native Chromium installation for PDF generation" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ Cross-Platform**: ARM64 (preview/staging) + x64 (production)" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ Build Modes**: Draft (fast preview) + Production (full build)" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ Artifacts**: All environments generate build artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ PDF Generation**: Chrome-based PDF rendering validated" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 Artifact Information" >> $GITHUB_STEP_SUMMARY
          echo "Build artifacts are uploaded with 7-day retention:" >> $GITHUB_STEP_SUMMARY
          echo "- **build-test-preview**: Draft mode build for quick iteration" >> $GITHUB_STEP_SUMMARY  
          echo "- **build-test-staging**: Full production build for pre-deploy testing" >> $GITHUB_STEP_SUMMARY
          echo "- **build-test-production**: Production-ready build for GitHub Pages" >> $GITHUB_STEP_SUMMARY
          
          # Check if any builds failed
          if [ "${{ needs.preview-build.result }}" != "success" ] || [ "${{ needs.staging-build.result }}" != "success" ] || [ "${{ needs.production-build.result }}" != "success" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## ❌ Failure Analysis" >> $GITHUB_STEP_SUMMARY
            echo "Some environment builds failed. Check individual job logs for details." >> $GITHUB_STEP_SUMMARY
            echo "Common issues:" >> $GITHUB_STEP_SUMMARY
            echo "- Chrome/Puppeteer setup problems on runners" >> $GITHUB_STEP_SUMMARY
            echo "- Missing dependencies or build script failures" >> $GITHUB_STEP_SUMMARY
            echo "- Node.js version compatibility issues" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Failed Jobs:**" >> $GITHUB_STEP_SUMMARY
            [ "${{ needs.preview-build.result }}" != "success" ] && echo "- Preview Build: ${{ needs.preview-build.result }}" >> $GITHUB_STEP_SUMMARY
            [ "${{ needs.staging-build.result }}" != "success" ] && echo "- Staging Build: ${{ needs.staging-build.result }}" >> $GITHUB_STEP_SUMMARY
            [ "${{ needs.production-build.result }}" != "success" ] && echo "- Production Build: ${{ needs.production-build.result }}" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi