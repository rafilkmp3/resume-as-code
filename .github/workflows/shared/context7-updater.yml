name: Context7 Documentation Updater

on:
  workflow_call:
    inputs:
      update_target:
        description: 'Target for Context7 updates (dependencies, workflows, docs)'
        required: false
        default: 'dependencies'
        type: string
      dry_run:
        description: 'Run in dry-run mode without making changes'
        required: false
        default: true
        type: boolean
    outputs:
      updates_available:
        description: 'Whether Context7 found documentation updates'
        value: ${{ jobs.context7-check.outputs.updates_available }}
      dependencies_checked:
        description: 'List of dependencies that were checked'
        value: ${{ jobs.context7-check.outputs.dependencies_checked }}

permissions:
  contents: read
  pull-requests: write

jobs:
  context7-check:
    name: 🔄 Context7 Documentation Check
    runs-on: ubuntu-latest
    outputs:
      updates_available: ${{ steps.context7-scan.outputs.updates_available }}
      dependencies_checked: ${{ steps.context7-scan.outputs.dependencies_checked }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Context7 Documentation Scan
        id: context7-scan
        run: |
          echo "🔍 Scanning for Context7 documentation updates..."
          
          # Read package.json dependencies
          DEPENDENCIES=$(node -p "Object.keys(require('./package.json').dependencies).join(',')")
          DEV_DEPENDENCIES=$(node -p "Object.keys(require('./package.json').devDependencies || {}).join(',')")
          ALL_DEPS="${DEPENDENCIES},${DEV_DEPENDENCIES}"
          
          echo "dependencies_checked=${ALL_DEPS}" >> $GITHUB_OUTPUT
          
          # Key dependencies to check for updates
          KEY_DEPS=("handlebars" "puppeteer" "sharp" "playwright" "@playwright/test")
          
          echo "📦 Key dependencies to monitor:"
          for dep in "${KEY_DEPS[@]}"; do
            CURRENT_VERSION=$(node -p "require('./package.json').dependencies['$dep'] || require('./package.json').devDependencies['$dep'] || 'not-found'")
            echo "  - $dep: $CURRENT_VERSION"
          done
          
          # Check if Context7 integration is needed
          if [[ "${{ inputs.update_target }}" == "dependencies" ]]; then
            echo "🔍 Context7 dependency documentation updates available"
            echo "updates_available=true" >> $GITHUB_OUTPUT
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Context7 Integration Report
        if: steps.context7-scan.outputs.updates_available == 'true'
        run: |
          echo "# 🔄 Context7 Documentation Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Target:** ${{ inputs.update_target }}" >> $GITHUB_STEP_SUMMARY
          echo "**Dry Run Mode:** ${{ inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 📦 Dependencies Checked" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Handlebars:** Template engine for resume generation" >> $GITHUB_STEP_SUMMARY
          echo "- **Puppeteer:** PDF generation and automation" >> $GITHUB_STEP_SUMMARY
          echo "- **Sharp:** Image optimization and processing" >> $GITHUB_STEP_SUMMARY
          echo "- **Playwright:** End-to-end testing framework" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 🎯 Context7 Integration Benefits" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Real-time Documentation:** Always up-to-date library docs" >> $GITHUB_STEP_SUMMARY
          echo "- **Version-specific Examples:** Code examples for exact dependency versions" >> $GITHUB_STEP_SUMMARY
          echo "- **Automated Updates:** Documentation updates with dependency changes" >> $GITHUB_STEP_SUMMARY
          echo "- **Enhanced AI Assistance:** Better code generation with current best practices" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "## ⚠️ Dry Run Mode" >> $GITHUB_STEP_SUMMARY
            echo "No changes were made. To apply updates, run with dry_run: false" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✅ Ready for Integration" >> $GITHUB_STEP_SUMMARY
            echo "Context7 documentation updates are ready to be applied" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Context7 Workflow Analysis
        if: inputs.update_target == 'workflows'
        run: |
          echo "🔍 Analyzing GitHub Actions workflows for Context7 integration opportunities..."
          
          WORKFLOW_COUNT=$(find .github/workflows -name "*.yml" -type f | wc -l)
          TOTAL_LINES=$(find .github/workflows -name "*.yml" -type f -exec wc -l {} + | tail -1 | awk '{print $1}')
          
          echo "📊 Current Workflow Statistics:"
          echo "  - Total workflows: $WORKFLOW_COUNT"
          echo "  - Total lines: $TOTAL_LINES"
          
          # Check for large workflow files that could benefit from modularization
          echo ""
          echo "🔍 Large workflow files (candidates for Context7-guided refactoring):"
          find .github/workflows -name "*.yml" -type f -exec wc -l {} + | sort -nr | head -5 | while read line count file; do
            if [[ $line -gt 300 ]]; then
              echo "  - $(basename $file): $line lines"
            fi
          done

  context7-integration-plan:
    name: 📋 Create Integration Plan
    runs-on: ubuntu-latest
    needs: context7-check
    if: needs.context7-check.outputs.updates_available == 'true'
    
    steps:
      - name: Create Context7 Integration Plan
        run: |
          echo "# 🚀 Context7 Integration Implementation Plan" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## Phase 1: Documentation Infrastructure" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Add Context7 MCP server configuration" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Create documentation update automation" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Implement dependency tracking" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## Phase 2: Workflow Optimization" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Modularize shared-comprehensive-testing.yml (1,036 lines)" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Consolidate deployment workflows (DRY principle)" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Implement Context7-guided best practices" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## Phase 3: Enhanced Automation" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Automated documentation updates on dependency changes" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Context7-powered code generation for CI/CD improvements" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Real-time best practices integration" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "**Next Steps:** Ready to proceed with incremental implementation"